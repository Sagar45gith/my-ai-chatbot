# ====================================================================
# NETLIFY CONFIGURATION (netlify.toml)
# ====================================================================
# This file is like a recipe that tells Netlify how to handle our project.
# It's much better than setting things manually in the UI.

[build]
  # Command: This tells Netlify to run 'npm install' to get the 'axios' library
  # that our function needs to work.
  command = "npm install"

  # Functions: This tells Netlify where to find our serverless function files.
  functions = "netlify/functions"

  # Publish: This tells Netlify where our frontend 'index.html' file is located.
  publish = "public"
```

---

### Step 4: Update Your Frontend

We need to tell your `index.html` file the new address of its "pop-up" backend.

1.  Open the `index.html` file (which is now inside the `public` folder).
2.  Find the `fetch` line (around line 138).
3.  **Replace the old Render URL with the new Netlify function path.** Netlify functions are always available at the path `/.netlify/functions/FILENAME`.

    ```javascript
    // BEFORE
    const response = await fetch('https://sagar-chatbot-backend.onrender.com/chat', { ... });

    // AFTER - This is the new, correct path for our serverless function
    const response = await fetch('/.netlify/functions/chat', { ... });
    ```

---

### Step 5: Update GitHub

Now that we've completely restructured the project, we need to send all these changes to GitHub.

1.  Open your terminal in the `my-chatbot` folder.
2.  Run these commands one by one:
    ```bash
    # This stages all the new files, moves, and deletions
    git add .

    # This saves the changes with a clear message
    git commit -m "Refactor project for Netlify serverless deployment"

    # This pushes the new structure to your GitHub repository
    git push
    
